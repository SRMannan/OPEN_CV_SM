import cv2
import mediapipe as mp
import time
import pyautogui ###
x1 = 0
x2 = 0
y1 = 0
y2 = 0

cap = cv2.VideoCapture(0)
cap.set(3 , 1280)
cap.set(4,1280)

my_hands = mp.solutions.hands.Hands()           ##object created
drawing_utils = mp.solutions.drawing_utils

while True:
    res , image = cap.read()
    ##so in order to use mediapipe for your hand detectuon model we need to convert the image from BGR TO RGB
    image = cv2.cvtColor(cv2.flip(image , 1) , cv2.COLOR_BGR2RGB)
    frame_height, frame_width, frame_depth = image.shape
    output = my_hands.process(image)
    hands = output.multi_hand_landmarks
    if hands:
        for hand in hands:
            drawing_utils.draw_landmarks(image , hand)      ##drawing da kaam done hogya aithe
            landmarks = hand.landmark

            for id , landmark in enumerate (landmarks):
                x = int(landmark.x * frame_width)
                y = int(landmark.y * frame_height)
                if id == 8:             ##forefinger
                    cv2.circle(img=image, center = (x,y)  , radius = 20, color = (0,255,0) , thickness=3)
                    x1 = x
                    y1 = y
                if id == 4:  ## Thumb
                    cv2.circle(img=image, center = (x,y)  , radius = 20, color = (128,0,128) , thickness=3)
                    x2 = x
                    y2 = y
        distance = ((x2-x1)**2 + (y2-y1)**2)**0.5
        distance = distance / 4
        print(distance)

        if distance > 25:
                pyautogui.press("volumeup")
        else:
                pyautogui.press("volumedown")
        cv2.line(image , (x1,y1) , (x2,y2) , color = (255, 128, 0) , thickness = 5 , lineType= cv2.LINE_AA)
    image = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)
    cv2.imshow("Tracking" , image)
    key = cv2.waitKey(1)
    if(key == 27):
        break
cap.release()
cv2.destroyAllWindows()
